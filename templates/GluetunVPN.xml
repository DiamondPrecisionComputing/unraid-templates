<?xml version="1.0"?>
<Container version="2">
   <Name>GluetunVPN</Name>
   <Repository>qmcgaw/gluetun</Repository>
   <Registry>https://hub.docker.com/r/qmcgaw/gluetun</Registry>
   <Network>bridge</Network>
   <Privileged>false</Privileged>
   <Support>https://forums.unraid.net/topic/111725-support-diamondprecisioncomputing-all-images-and-files</Support>
   <Project>https://github.com/qdm12/gluetun</Project>
   <License>https://img.shields.io/github/license/qdm12/gluetun</License>
   <Overview>
   # Gluetun VPN client

Lightweight swiss-knife-like VPN client to multiple VPN service providers

![Title image](https://raw.githubusercontent.com/qdm12/gluetun/master/title.svg)

[![Build status](https://github.com/qdm12/gluetun/actions/workflows/ci.yml/badge.svg)](https://github.com/qdm12/gluetun/actions/workflows/ci.yml)

[![Docker pulls qmcgaw/gluetun](https://img.shields.io/docker/pulls/qmcgaw/gluetun.svg)](https://hub.docker.com/r/qmcgaw/gluetun)
[![Docker pulls qmcgaw/private-internet-access](https://img.shields.io/docker/pulls/qmcgaw/private-internet-access.svg)](https://hub.docker.com/r/qmcgaw/gluetun)

[![Docker stars qmcgaw/gluetun](https://img.shields.io/docker/stars/qmcgaw/gluetun.svg)](https://hub.docker.com/r/qmcgaw/gluetun)
[![Docker stars qmcgaw/private-internet-access](https://img.shields.io/docker/stars/qmcgaw/private-internet-access.svg)](https://hub.docker.com/r/qmcgaw/gluetun)

![Last release](https://img.shields.io/github/release/qdm12/gluetun?label=Last%20release)
![Last Docker tag](https://img.shields.io/docker/v/qmcgaw/gluetun?sort=semver&label=Last%20Docker%20tag)
[![Last release size](https://img.shields.io/docker/image-size/qmcgaw/gluetun?sort=semver&label=Last%20released%20image)](https://hub.docker.com/r/qmcgaw/gluetun/tags?page=1&ordering=last_updated)
![GitHub last release date](https://img.shields.io/github/release-date/qdm12/gluetun?label=Last%20release%20date)
![Commits since release](https://img.shields.io/github/commits-since/qdm12/gluetun/latest?sort=semver)

[![Latest size](https://img.shields.io/docker/image-size/qmcgaw/gluetun/latest?label=Latest%20image)](https://hub.docker.com/r/qmcgaw/gluetun/tags)

[![GitHub last commit](https://img.shields.io/github/last-commit/qdm12/gluetun.svg)](https://github.com/qdm12/gluetun/commits/master)
[![GitHub commit activity](https://img.shields.io/github/commit-activity/y/qdm12/gluetun.svg)](https://github.com/qdm12/gluetun/graphs/contributors)
[![GitHub closed PRs](https://img.shields.io/github/issues-pr-closed/qdm12/gluetun.svg)](https://github.com/qdm12/gluetun/pulls?q=is%3Apr+is%3Aclosed)
[![GitHub issues](https://img.shields.io/github/issues/qdm12/gluetun.svg)](https://github.com/qdm12/gluetun/issues)
[![GitHub closed issues](https://img.shields.io/github/issues-closed/qdm12/gluetun.svg)](https://github.com/qdm12/gluetun/issues?q=is%3Aissue+is%3Aclosed)

[![Lines of code](https://img.shields.io/tokei/lines/github/qdm12/gluetun)](https://github.com/qdm12/gluetun)
![Code size](https://img.shields.io/github/languages/code-size/qdm12/gluetun)
![GitHub repo size](https://img.shields.io/github/repo-size/qdm12/gluetun)
![Go version](https://img.shields.io/github/go-mod/go-version/qdm12/gluetun)

![Visitors count](https://visitor-badge.laobi.icu/badge?page_id=gluetun.readme)

## Quick links

- [Setup](#setup)
- [Features](#features)
- Problem?
  - [Check the Wiki](https://github.com/qdm12/gluetun/wiki)
  - [Start a discussion](https://github.com/qdm12/gluetun/discussions)
  - [Fix the Unraid template](https://github.com/qdm12/gluetun/discussions/550)
- Suggestion?
  - [Create an issue](https://github.com/qdm12/gluetun/issues)
  - [Join the Slack channel](https://join.slack.com/t/qdm12/shared_invite/enQtOTE0NjcxNTM1ODc5LTYyZmVlOTM3MGI4ZWU0YmJkMjUxNmQ4ODQ2OTAwYzMxMTlhY2Q1MWQyOWUyNjc2ODliNjFjMDUxNWNmNzk5MDk)
- Happy?
  - Sponsor me on [github.com/sponsors/qdm12](https://github.com/sponsors/qdm12)
  - Donate to [paypal.me/qmcgaw](https://www.paypal.me/qmcgaw)
  - Drop me [an email](mailto:quentin.mcgaw@gmail.com)
- **Want to add a VPN provider?** check [Development](https://github.com/qdm12/gluetun/wiki/Development) and [Add a provider](https://github.com/qdm12/gluetun/wiki/Add-a-provider)
- Video:

  [![Video Gif](https://i.imgur.com/CetWunc.gif)](https://youtu.be/0F6I03LQcI4)

- [Substack Console interview](https://console.substack.com/p/console-72)

## Features

- Based on Alpine 3.18 for a small Docker image of 35.6MB
- Supports: **AirVPN**, **Cyberghost**, **ExpressVPN**, **FastestVPN**, **HideMyAss**, **IPVanish**, **IVPN**, **Mullvad**, **NordVPN**, **Perfect Privacy**, **Privado**, **Private Internet Access**, **PrivateVPN**, **ProtonVPN**, **PureVPN**,  **SlickVPN**, **Surfshark**, **TorGuard**, **VPNSecure.me**, **VPNUnlimited**, **Vyprvpn**, **WeVPN**, **Windscribe** servers
- Supports OpenVPN for all providers listed
- Supports Wireguard both kernelspace and userspace
  - For **Mullvad**, **Ivpn**, **Surfshark** and **Windscribe**
  - For **ProtonVPN**, **PureVPN**, **Torguard**, **VPN Unlimited** and **WeVPN** using [the custom provider](https://github.com/qdm12/gluetun/wiki/Custom-provider)
  - For custom Wireguard configurations using [the custom provider](https://github.com/qdm12/gluetun/wiki/Custom-provider)
  - More in progress, see [#134](https://github.com/qdm12/gluetun/issues/134)
- DNS over TLS baked in with service provider(s) of your choice
- DNS fine blocking of malicious/ads/surveillance hostnames and IP addresses, with live update every 24 hours
- Choose the vpn network protocol, `udp` or `tcp`
- Built in firewall kill switch to allow traffic only with needed the VPN servers and LAN devices
- Built in Shadowsocks proxy (protocol based on SOCKS5 with an encryption layer, tunnels TCP+UDP)
- Built in HTTP proxy (tunnels HTTP and HTTPS through TCP)
- [Connect other containers to it](https://github.com/qdm12/gluetun/wiki/Connect-a-container-to-gluetun)
- [Connect LAN devices to it](https://github.com/qdm12/gluetun/wiki/Connect-a-LAN-device-to-gluetun)
- Compatible with amd64, i686 (32 bit), **ARM** 64 bit, ARM 32 bit v6 and v7, and even ppc64le üéÜ
- [Custom VPN server side port forwarding for Private Internet Access](https://github.com/qdm12/gluetun/wiki/Private-internet-access#vpn-server-port-forwarding)
- Possibility of split horizon DNS by selecting multiple DNS over TLS providers
- Unbound subprogram drops root privileges once launched
- Can work as a Kubernetes sidecar container, thanks @rorph

## Setup

üéâ There are now instructions specific to each VPN provider with examples to help you get started as quickly as possible!

Go to the [Wiki](https://github.com/qdm12/gluetun/wiki)!

[üêõ Found a bug in the Wiki?!](https://github.com/qdm12/gluetun/issues/new?assignees=&labels=%F0%9F%93%84+Wiki+issue&template=wiki+issue.yml&title=Wiki+issue%3A+)

Here's a docker-compose.yml for the laziest:

```yml
version: "3"
services:
  gluetun:
    image: qmcgaw/gluetun
    # container_name: gluetun
    # line above must be uncommented to allow external containers to connect. See https://github.com/qdm12/gluetun/wiki/Connect-a-container-to-gluetun#external-container-to-gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 8888:8888/tcp # HTTP proxy
      - 8388:8388/tcp # Shadowsocks
      - 8388:8388/udp # Shadowsocks
    volumes:
      - /yourpath:/gluetun
    environment:
      # See https://github.com/qdm12/gluetun/wiki
      - VPN_SERVICE_PROVIDER=ivpn
      - VPN_TYPE=openvpn
      # OpenVPN:
      - OPENVPN_USER=
      - OPENVPN_PASSWORD=
      # Wireguard:
      # - WIREGUARD_PRIVATE_KEY=wOEI9rqqbDwnN8/Bpp22sVz48T71vJ4fYmFWujulwUU=
      # - WIREGUARD_ADDRESSES=10.64.222.21/32
      # Timezone for accurate log times
      - TZ=
      # Server list updater. See https://github.com/qdm12/gluetun/wiki/Updating-Servers#periodic-update
      - UPDATER_PERIOD=
      - UPDATER_VPN_SERVICE_PROVIDERS=
```

üÜï Image also available as `ghcr.io/qdm12/gluetun`

## License

[![MIT](https://img.shields.io/github/license/qdm12/gluetun)](https://github.com/qdm12/gluetun/master/LICENSE)
   </Overview>
   <Category>Security: Network:VPN</Category>
   <WebUI>http://[IP]:[PORT:8000]</WebUI>
   <TemplateURL>https://raw.githubusercontent.com/DiamondPrecisionComputing/unraid-templates/main/templates/GluetunVPN.xml</TemplateURL>
   <Icon>https://raw.githubusercontent.com/qdm12/gluetun/master/doc/logo_256.png</Icon>
   <ExtraParams>--cap-add=NET_ADMIN --restart always</ExtraParams>
   <DonateText>This app and docker were generously made by qmcgaw. If you like the project please consider making a donation toward his efforts and check out the MANY other projects he has created on GitHub.</DonateText>
   <DonateLink>https://www.paypal.me/qmcgaw</DonateLink>
   <Date>2023-05-23</Date>
   <Changes>
###3.34.1
###Fixes
- Fix routing net.IPNet to netip.Prefix conversion (fixes #1583)

###3.34.0
###Features
- HEALTH_SUCCESS_WAIT_DURATION variable, defaulting to 5s
- Rename port forwarding variables (prepare to add ProtonVPN, see #1488)
  - VPN_PORT_FORWARDING_STATUS_FILE
  - VPN_PORT_FORWARDING
  - Deprecate PIA specific variables for VPN port forwarding
- Servers data updated for: perfect privacy, surfshark
- Routing: log default route family as string
###Fixes
- Mullvad: add aes-256-gcm cipher to support their newer Openvpn 2.6 servers
- Perfect privacy: update cert and key (thanks @Thamos88 and @15ky3)
- Perfect privacy: remove check for empty hostname in servers
- Routing: add policy rules for each destination local networks (thanks @kylemanna)
- Settings: clarify Wireguard provider unsupported error
- Minor fixes
  - Pprof settings rates can be nil
###Maintenance
- Wrap all sentinel errors and enforce using errors.Is
- Migrate usages of inet.af/netaddr to net/netip
- Use netip.Prefix for ip networks instead of net.IPNet and netaddr.IPPrefix
- Use netip.Addr instead of net.IP
- Wireguard: use netip.AddrPort instead of *net.UDPAddr
- Healthcheck use Go dialer preferrably
- Upgrade Wireguard dependencies
- Upgrade inet.af/netaddr dependency
- Upgrade golang.org/x/net to 0.10.0
- Upgrade github.com/fatih/color from 1.14.1 to 1.15.0
- Upgrade golangci-lint from v1.51.2 to v1.52.2
- Upgrade github.com/vishvananda/netlink from 1.1.1-0.20211129163951-9ada19101fc5 to 1.2.1-beta.2
- Upgrade golang.org/x/sys from 0.7.0 to 0.8.0
- Remove unneeded settings/helpers/pointers.go, CopyNetipPrefix and settings/sources/env envToInt function
- Fix netlink tagged integration tests
- Settings: use generics for helping functions (thanks @bubuntux)
- Simplify default routes for loop
- Development container: do not bind mount ~/.gitconfig

###3.33.3
###Features
- WIREGUARD_IMPLEMENTATION variable which can be auto (default), userspace or kernelspace
- gchr.io/qdm12/gluetun Docker image mirror
- Alpine upgraded from 3.16 to 3.17
- OpenVPN upgraded from 2.5.6 to 2.5.8 built with OpenSSL 3
- OpenSSL 1.1.* installed separately to maintain OpenVPN 2.4 working
- Logging:
  - log FAQ Github Wiki URL when the VPN internally restarts
  - Warn Openvpn 2.4 is to be removed in the next release
  - Warn when using SlickVPN or VPN Unlimited due to their weak certificates
  - Warn Hide My Ass is no longer supported (credits to @Fukitsu)
  - OpenVPN RTNETLINK answers: File exists changed to warning level with explanation
  - OpenVPN Linux route add command failed: changed to warning level with explanation
  - Log IPv6 support at debug level with more information instead of at the info level
- Update servers data: AirVPN, FastestVPN, Mullvad, Surfshark, Private Internet Access
- Netlink: add debug logger (no use yet)
- Surfshark: add 2 new 'HK' servers
- Install Alpine wget package (fixes #1260, #1494 due to busybox's buggy wget)
- OpenVPN: transparently upgrade key encryption for DES-CBC encrypted keys (VPN Secure)
###Important Fixes
- Exit with code 1 on a program error
- Profiling server: do not run if disabled
- IPv6 detection: inspect each route source and destination for buggy kernels/container runtimes
- iptables detection: better interpret permission denied for buggy kernels/container runtimes
- FastestVPN: update OpenVPN zip file URL for the updater (#1264)
- IPVanish: update OpenVPN zip file URL for the updater (#1449)
- Surfshark: remove 3 servers no longer resolving 
- IPv6 detection: inspect each route source and destination for buggy kernels/container runtimes
- AirVPN
  - remove commas from API locations
  - remove commas from city names- 
- VPN Unlimited: lower TLS security level to 0 to allow weak certificates to work with Openvpn 2.5.8+Openssl 3
- SlickVPN
  - explicitely allow AES-256-GCM cipher
  - lower TLS security level to 0 to allow SlickVPN's weak certificates to work with Openvpn 2.5.8+Openssl 3
  - All servers support TCP and UDP
  - Precise default TCP port as 443
###Documentation
- Document new docker image gchr.io/qdm12/gluetun
- Add servers updater environment variables (#1393)
- Update Github labels:
  - remove issue category labels
  - Add temporary status labels
  - Add complexity labels
###Minor Fixes
- Firewall: remove previously allowed input ports
- HTTP proxy: lower shutdown wait from 2s to 100ms
- Private Internet Access: remove credentials from login error string
- Wireguard:
  - validate Wireguard addresses depending on IPv6 support
  - ignore IPv6 interface addresses if IPv6 is not supported
- Healthcheck client: set unset health settings to defaults
- Print outbound subnets settings correctly
- github.com/breml/rootcerts from 0.2.8 to 0.2.10
- Add subprogram name in version check error
###Maintenance
- Development tooling:
  - Go upgraded from 1.19 to 1.20
  - Development container has the same ssh bind mount for all platforms
  - Development container has openssl installed
  - golangci-lint upgraded from v1.49.0 to v1.51.2
  - github.com/stretchr/testify upgraded from 1.8.1 to 1.8.2
- Dependencies
  - golang.org/x/text upgraded from 0.4.0 to 0.8.0
  - github.com/fatih/color upgraded from 1.13.0 to 1.14.1
  - golang.org/x/sys upgraded from 0.3.0 to 0.6.0
  - Remove no longer needed apk-tools
- Code health
  - Add comments for OpenVPN settings fields about their base64 DER encoding
  - internal/openvpn/extract: simplify PEM extraction function
  - Review all error wrappings
    - remove repetitive cannot and failed prefixes
    - rename unmarshaling to decoding
- CI
  - docker/build-push-action upgraded from 3.2.0 to 4.0.0

###3.32.0
###Features
- AirVPN support (#1145)
- Surfshark Wireguard support (#587)
- IPv6 connection and tunneling (#1114)
- Auto detection of IPv6 support for OpenVPN and OPENVPN_IPV6 removed
- Built-in servers updates: Cyberghost, FastestVPN, Ivpn, Mullvad, ProtonVPN, PureVPN and Windscribe
- HTTP proxy: log credentials sent on mismatch
###Fixes
- Private Internet Access: get token for port forwarding (#1132)
- FastestVPN: updater handles lowercase .ovpn filenames
- Ivpn: update mechanism fixed for Wireguard servers
- Cyberghost: remove outdated server groups 94-1 pemium udp usa, 95-1 premium udp asia, 93-1 pemium udp usa and 96-1 premium tcp asia
- Exit with OS code 0 on successful shutdown
- Public IP fetching
  - handle HTTP status codes 403 as too many requests
  - no retry when too many requests to ipinfo.io
- OpenVPN: do not set tun-ipv6
  - server should push tun-ipv6 if it is available
  - Add ignore filter for tun-ipv6 if ipv6 is not supported on client
- Updater: error when server has not the minimal information
- Custom provider: OPENVPN_CUSTOM_CONFIG takes precedence only if VPN_SERVICE_PROVIDER is empty
- Wireguard: ignore IPv6 addresses if IPv6 is disabled
- Environment variables: trim space for wireguard addresses
- OpenVPN: parse udp4, udp6, tcp4 or tcp6

###3.31.1
###Fixes
- Fix vpnsecure.me operation by allowing empty OpenVPN username

###3.31.0
###Features
- SlickVPN Support (#961)
- VPNsecure.me support (#848)
- Update servers data built-in for ExpressVPN, Surfshark
- Control server: add /vpn route to replace /openvpn (in future v4.0.0)
- Control server: patch VPN settings using HTTP PUT at /v1/vpn/settings (undocumented, experimental)
###Fixes
- Surfshark: remove no longer valid retro server data
- Bump github.com/breml/rootcerts from 0.2.3 to 0.2.6 (#1033, #1058)

###3.30.1
###Fixes
- OpenVPN certificate: read PEM encoded files and read base 64 encoded PEM inner value from environment variable (as documented in Wiki)
- OpenVPN key: read PEM encoded files and read base 64 encoded PEM inner value from environment variable (as documented in Wiki)

###3.30.0
###Features
- ExpressVPN: OpenVPN additional ciphers (#1047)
- Storage
  - add "keep" boolean field for servers to keep manually added servers
  - log time difference as a friendly duration
- Updater: configurable minimum ratio of servers found
  - UPDATER_MIN_RATIO environment variable
  - -minratio flag for CLI operation
- Docker: upgrade Alpine from 3.15 to 3.16 (#1005)
- Update servers data: Perfect privacy, Purevpn, Privatevpn, Private Internet Access, ProtonVPN, IPVanish, Surfshark
- Environment variables: clean values by removing surrounding spaces and suffix new line characters
- Wireguard: add debug logs for IPv6 detection which can be enabled with LOG_LEVEL=debug
###Fixes
- ExpressVPN: OpenVPN fragment option taken into account (#1047)
- Private internet access
  - load custom certificate to communicate with their API
  - restrict custom port choice
- ProtonVPN
  - set free field for free servers, fixing FREE_ONLY behavior
  - remove duplicate entry IPs
  - restrict custom port choice
- Wireguard: continue on ipv6 route add permission denial
- VPN: do not close wait error channel on consumer side
- Port forwarding: set file owned by the uid and gid set by PUID and PGID
- Private Internet Access: remove duplicate log of port forwarding data expiration
- Pprof settings: override method used correctly in global settings
- Updater: Fix CLI operation not setting DNS server
- IPVanish: remove duplicate server entries
- Custom: validate custom OpenVPN file at settings validation

###3.29.0
###Features
- Firewall
  - Auto-detect iptables and iptables-nft for IPv4 and IPv6
  - Improve error message when NET_ADMIN capability is missing
  - Support all default routes instead of only the first one
    - Accept output traffic from all default routes through VPN interface
    - Accept output from all default routes to outbound subnets
    - Accept all input traffic on ports for all default routes
    - Add IP rules for all default routes
  - Add IPv6 inbound routing
- Provider Specific
  - Servers update: Mullvad, Privado, PrivateVPN, ProtonVPN, PureVPN, NordVPN, Private Internet Access, Torguard, FastestVPN (thanks @mircoianese #923)
  - NordVPN: remove OpenVPN compression
  - Ivpn: allow no password for account IDs matching i-xxxx-xxxx-xxxx or ivpn-xxxx-xxxx-xxxx
- Other
  - Use https://github.com/qdm12/log for logging
  - Log out OS signal name when shutting down
  - Storage: omit empty fields in servers.json
###Fixes
- Health check
  - HEALTH_TARGET_ADDRESS to replace HEALTH_ADDRESS_TO_PING
  - Remove github.com/go-ping/ping dependency
  - Dial TCP the target address, appending :443 if port is not set
  - Target address defaults to cloudflare.com:443
- OPENVPN_FLAGS working fixed
- HEALTH_VPN_DURATION_ADDITION working fixed
- Privado: fix OPENVPN_PORT usage, thanks @cacti-user
- Firewall: only set routes for IPv4 default routes
- Use openvpn 2.4.12-r0 in CI build for openvpn 2.4
- Fix PureVPN zip file download link (#915 thanks @mircoianese)
- Private Internet Access: hide escaped url query values (token etc.)
- NordVPN: allow aes-256-gcm for Openvpn 2.4
- Private Internet Access: fix certificate validation (use OS certificates instead of custom certificate)
- Port forwarding: loop exit from vpn loop
- PUID and PGID as 32 bit unsigned integers instead of 16 bit

###3.28.0
###Features
- Updater: environment variable UPDATER_VPN_SERVICE_PROVIDERS
  - Updater defaults to update the VPN provider in use if enabled
- ExpressVPN: update built-in server data
- OPENVPN_PROCESS_USER with retro-compatibility with OPENVPN_ROOT
- Add pprof HTTP server on port :6060 (#807)
###Fixes
- Accept uppercase OPENVPN_PROTOCOL values
- Cyberghost: log about compatibility mode if COUNTRY is left empty
- Control server: allow to bind on a random port by using :0
- Retro-compatible precedence order for environment variables with defaults set in Dockerfile
  - BLOCK_NSA has precedence over BLOCK_SURVEILLANCE
  - HEALTH_OPENVPN_DURATION_ADDITION has precedence over HEALTH_VPN_DURATION_ADDITION
  - HEALTH_OPENVPN_DURATION_INITIAL has precendence over HEALTH_VPN_DURATION_INITIAL
  - Chain of precedence: PROXY > TINYPROXY > HTTPPROXY
  - Chain of precedence: PROXY_LOG_LEVEL > TINYPROXY_LOG > HTTPPROXY_LOG
  - PROTOCOL has precendence over OPENVPN_PROTOCOL
  - IP_STATUS_FILE has precendence over PUBLICIP_FILE
  - SHADOWSOCKS_PORT has precedence over SHADOWSOCKS_LISTENING_ADDRESS
  - SHADOWSOCKS_METHOD has precedence over SHADOWSOCKS_CIPHER

###3.27.0
###Features
- Wireguard opportunistic kernelspace
  - Auto detect if kernelspace implementation is available
  - Fallback to Go userspace implementation if kernel is not available
- Entrypoint name changed from entrypoint to gluetun-entrypoint
- Privado: update servers data
- ProtonVPN: update servers data
- Docker image: upgrade Alpine to 3.15
###Fixes
-Hidemyass: REGION validation
-Dockerfile: change SHADOWSOCKS_ADDRESS to SHADOWSOCKS_LISTENING_ADDRESS

###3.26.0
###Features
- Perfect privacy support (#606)
- PrivateVPN
  - OPENVPN_PORT support
- Update server information
  - Windscribe
  - Torguard
  - ProtonVPN
  - NordVPN
- Multiple OpenVPN ciphers for negotiation
  - Cyberghost default cipher set to AES-256-GCM
  - OPENVPN_CIPHER accept comma separated sipher values
  - use ncp-ciphers for OpenVPN 2.4
###Fixes
- PrivateVPN: New OpenVPN configuration values
- VyprVPN: Openvpn comp-lzo option
- NordVPN: Openvpn comp-lzo option
- Docker image: fix 2 low vulnerability busybox vulnerabilities
- QNAP devices: openvpn at /usr/sbin/openvpn2.5 (see #157)
- Updater: fix CLI error message
- Version check: check Github http response status code
- Public IP fetcher: remove opendns.com due to bad x509 cert
- Storage: server data version diff when reading file

###3.25.0
###Features
- ExpressVPN Support (#623)
- WeVPN Support (#591)
- Healthcheck uses DNS and ping to github.com instead of only DNS to avoid relying on DNS cache
- HEALTH_ADDRESS_TO_PING variable
- Adapt logger prefix to VPN used
  - openvpn: for OpenVPN
  - wireguard: for Wireguard
- VPNSP value custom for OpenVPN custom config files (#621)
- VPNSP value custom for Wireguard custom configuration
  - WIREGUARD_PUBLIC_KEY variable
  - WIREGUARD_ENDPOINT_IP variable
- OpenVPN custom configuration file is reloaded on VPN restarts
- OpenVPN custom configuration file is parsed at start to log out valid settings
- Support IPv6 routing for Wireguard
- Log Wireguard server endpoint
- Log Wireguard keys when LOG_LEVEL=debug
- Windscribe OpenVPN default cipher set to aes-256-gcm
- Update server information built-in
  - Cyberghost
  - FastestVPN
  - Mullvad
- format-servers CLI command
###Fixes
- Set non block on TUN device
- Close HTTP client connections when tunnel comes up
- Public IP loop deadlock
- OpenVPN VPNSP=custom does not deduplicate lines
- PureVPN remove OpenVPN cipher option AES-256-CBC
- Cyberghost OpenVPN cipher option defaults to aes-128-gcm
- Repository servers.json path for maintainer server update cli
- Add missing HTTP status code check for Windscribe API
- PIA_ENCRYPTION default in Go program
  - Defaults to strong instead of strong certificate string
  - No impact on Docker images since variable is set to strong in Dockerfile
  - Only read PIA_ENCRYPTION if service provider is PIA
- (Security) Remove OpenVPN compression option (affects FastestVPN, Hide My Ass, IP Vanish, IVPN, NordVPN, PIA, PrivateVPN, ProtonVPN, Torguard, VPN Unlimited, VyprVPN)
- FastestVPN updated OpenVPN configuration
- HideMyAss: Cote d'Ivoire server country name
- Log errors with error level for OpenVPN
- PIA SERVER_NAME variable functionality

###3.24.0
###Features
- IVPN
  - Wireguard support (#584)
  - TCP protocol support for OpenVPN
  - Custom port support for OpenVPN
  - Servers data update (#578)
  - `ISP` filter (#578)
- Mullvad
  - `WIREGUARD_PORT` support
- Surfshark
  - Servers data improved (#575)
- `LOG_LEVEL` variable (#577)
- Add IP geolocation data to HTTP control server at `/v1/publicip/ip`
- `OPENVPN_TARGET_IP` overrides IP for OpenVPN only
- `WIREGUARD_ADDRESSES` accepts multiple comma separated IP networks
###Fixes
- `FIREWALL_OUTBOUND_SUBNETS` IP rules
- Wireguard
  - `FIREWALL_VPN_INPUT_PORTS` support
  - Fixed cleanup of wireguard link that was preventing restarts
- Surfshark `REGION` retro-compatibility restored
- `MULTIHOP_ONLY` defaults to `no`
- Fix panic for certain 'no server found' errors
- Clear IP data when VPN is stopped
    
###v3.23.0
- Support for Wireguard (IVPN, Mullvad and Windscribe)
- Change ownership of OpenVPN configuration file with PUID and PGID
- OpenVPN custom config process user gets removed
- OpenVPN custom config with custom network interface name set properly in firewall
- Sorted IP addresses for servers.json
- Only allow traffic through VPN interface when needed
- HTTP control server /v1/openvpn route interacts with OpenVPN settings only (not provider settings)
- Image size lowered to 31MB
- Using Alpine 3.14
- Wireguard support

###v3.22.0
- Allow multiple comma separated values for CYBERGHOST_GROUP
- Update Cyberghost servers information
- Change from SHADOWSOCKS_PORT to SHADOWSOCKS_LISTENING_ADDRESS
- Windscribe: only use OpenVPN IP addresses, not Wireguard ones
- Cyberghost: explicit-exit-notify used only for UDP, not TCP
- Fix loop state change logic deadlock (preventing a 2nd restart for all run loops)
- Use latest apk-tools to fix an Alpine vulnerability
- Upgrade qdm12/ss-server to v0.3.0
  </Changes>
   <Config Name="TIMEZONE" Target="TZ" Default="" Mode="" Description="Specify a timezone to use to have correct log times. i.e. Europe/London" Type="Variable" Display="always" Required="true" Mask="false" />
   <Config Name="config" Target="/gluetun" Default="/mnt/user/appdata/gluetun" Mode="rw" Description="Container Path: /gluetun" Type="Path" Display="always" Required="false" Mask="false">/mnt/user/appdata/gluetun</Config>
   <Config Name="VPN_SERVICE_PROVIDER" Target="VPN_SERVICE_PROVIDER" Default="private internet access|airvpn|cyberghost|expressvpn|fastestvpn|hidemyass|ipvanish|ivpn|mullvad|nordvpn|perfect privacy|privado|privatevpn|protonvpn|purevpn|slickvpn|surfshark|torguard|vpnsecure|vpn unlimited|vyprvpn|wevpn|windscribe|custom" Mode="" Description="VPN Service Provider" Type="Variable" Display="always" Required="true" Mask="false">private internet access</Config>
   <Config Name="VPN_TYPE" Target="VPN_TYPE" Default="openvpn|wireguard" Mode="" Description="VPN Type. Default is OpenVPN. Note not all providers support Wireguard." Type="Variable" Display="always" Required="true" Mask="false">openvpn</Config>
   <Config Name="VPN_INTERFACE" Target="VPN_INTERFACE" Default="tun0" Mode="" Description="OPTIONAL: Specify a custom network interface name to use. (e.g. tun0 or wg0)" Type="Variable" Display="always" Required="true" Mask="false">tun0</Config>
   <Config Name="VPN_ENDPOINT_PORT" Target="VPN_ENDPOINT_PORT" Default="" Mode="" Description="OPTIONAL: Custom OpenVPN/Wireguard server endpoint port to use" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="VPN_ENDPOINT_IP" Target="VPN_ENDPOINT_IP" Default="" Mode="" Description="OPTIONAL: Specify a target VPN IP address to use" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="OPENVPN_PROTOCOL" Target="OPENVPN_PROTOCOL" Default="udp|tcp" Mode="" Description="OPTIONAL: Container Variable: OPENVPN_PROTOCOL" Type="Variable" Display="always" Required="false" Mask="false">udp</Config>
   <Config Name="OPENVPN_USER" Target="OPENVPN_USER" Default="" Mode="" Description="Container Variable: OPENVPN_USER" Type="Variable" Display="always" Required="true" Mask="false" />
   <Config Name="OPENVPN_PASSWORD" Target="OPENVPN_PASSWORD" Default="" Mode="" Description="Container Variable: OPENVPN_PASSWORD (Optional for Mullvad)" Type="Variable" Display="always" Required="true" Mask="true" />
   <Config Name="OPENVPN_VERSION" Target="OPENVPN_VERSION" Default="2.5|2.4" Mode="" Description="OPTIONAL: Set the OpenVPN version to run" Type="Variable" Display="always" Required="false" Mask="false">2.5</Config>
   <Config Name="OPENVPN_VERBOSITY" Target="OPENVPN_VERBOSITY" Default="0|1|2|3|4|5|6" Mode="" Description="OPTIONAL: OpenVPN verbosity level" Type="Variable" Display="always" Required="false" Mask="false">1</Config>
   <Config Name="OPENVPN_FLAGS" Target="OPENVPN_FLAGS" Default="" Mode="" Description="OPTIONAL: Space delimited OpenVPN flags to pass to openvpn" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="OPENVPN_CIPHERS" Target="OPENVPN_CIPHERS" Default="" Mode="" Description="OPTIONAL: Specify one or more custom ciphers to use" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="OPENVPN_AUTH" Target="OPENVPN_AUTH" Default="" Mode="" Description="OPTIONAL: Specify a custom auth algorithm to use. i.e. sha256" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="OPENVPN_PROCESS_USER" Target="OPENVPN_PROCESS_USER" Default="no|yes" Mode="" Description="OPTIONAL: Run OpenVPN as root" Type="Variable" Display="always" Required="false" Mask="false">no</Config>
   <Config Name="OPENVPN_IPV6" Target="OPENVPN_IPV6" Default="off|on" Mode="" Description="OPTIONAL: Enable tunneling of IPv6 (only for Mullvad)" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="OPENVPN_CUSTOM_CONFIG" Target="OPENVPN_CUSTOM_CONFIG" Default="" Mode="" Description="OPTIONAL: The path to your OpenVPN configuration file. This implies VPN_SERVICE_PROVIDER=custom" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="WIREGUARD_IMPLEMENTATION" Target="WIREGUARD_IMPLEMENTATION" Default="auto|userspace|kernelspace" Mode="" Description="Implementation of Wireguard to use." Type="Variable" Display="always" Required="false" Mask="false">auto</Config>
   <Config Name="WIREGUARD_PRIVATE_KEY" Target="WIREGUARD_PRIVATE_KEY" Default="" Mode="" Description="OPTINAL: 32 bytes private key in base64 format" Type="Variable" Display="always" Required="false" Mask="false"></Config>
   <Config Name="WIREGUARD_PRESHARED_KEY" Target="WIREGUARD_PRESHARED_KEY" Default="" Mode="" Description="OPTINAL: 32 bytes pre-shared key in base64 format" Type="Variable" Display="always" Required="false" Mask="false"></Config>
   <Config Name="WIREGUARD_PUBLIC_KEY" Target="WIREGUARD_PUBLIC_KEY" Default="" Mode="" Description="Only for VPN_SERVICE_PROVIDER=custom and VPN_TYPE=wireguard: Wireguard server public key" Type="Variable" Display="always" Required="false" Mask="false"></Config>
   <Config Name="WIREGUARD_ADDRESSES" Target="WIREGUARD_ADDRESSES" Default="" Mode="" Description="Wireguard IP network in the format xx.xx.xx.xx/xx. Wireguard interface address, only required if VPN_TYPE=wireguard. Note this is usually specific by user and the same for all servers." Type="Variable" Display="always" Required="false" Mask="false"></Config>
   <Config Name="SERVER_REGIONS" Target="SERVER_REGIONS" Default="" Mode="" Description="OPTIONAL: Comma separated list of VPN regions. https://github.com/qdm12/gluetun/wiki" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="SERVER_COUNTRIES" Target="SERVER_COUNTRIES" Default="" Mode="" Description="OPTIONAL: Comma separated list of VPN countries. https://github.com/qdm12/gluetun/wiki" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="SERVER_CITIES" Target="SERVER_CITIES" Default="" Mode="" Description="OPTIONAL: Comma separated list of VPN cities. https://github.com/qdm12/gluetun/wiki" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="SERVER_NAMES" Target="SERVER_NAMES" Default="" Mode="" Description="OPTIONAL: (PIA ONLY) Single server hostname. https://github.com/qdm12/gluetun/wiki" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="SERVER_HOSTNAMES" Target="SERVER_HOSTNAMES" Default="" Mode="" Description="OPTIONAL: Comma separated list of server hostnames. https://github.com/qdm12/gluetun/wiki" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="FIREWALL" Target="FIREWALL" Default="on|off" Mode="" Description="Turn on or off the container built-in firewall. You should turn off for debugging purposes only." Type="Variable" Display="always" Required="false" Mask="false">on</Config>
   <Config Name="FIREWALL_VPN_INPUT_PORTS" Target="FIREWALL_VPN_INPUT_PORTS" Default="" Mode="" Description="OPTIONAL: Comma separated list of ports to allow from the VPN server side (useful for vyprvpn port forwarding)" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="FIREWALL_INPUT_PORTS" Target="FIREWALL_INPUT_PORTS" Default="" Mode="" Description="OPTIONAL: Comma separated list of ports to allow through the default interface. This seems needed for Unraid containers and Kubernetes sidecars." Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="FIREWALL_OUTBOUND_SUBNETS" Target="FIREWALL_OUTBOUND_SUBNETS" Default="" Mode="" Description="OPTIONAL: You first need to set your LAN CIDR in FIREWALL_OUTBOUND_SUBNETS. For example with FIREWALL_OUTBOUND_SUBNETS=192.168.1.0/24" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="FIREWALL_DEBUG" Target="FIREWALL_DEBUG" Default="off|on" Mode="" Description="OPTIONAL: Prints every firewall related command. You should use it for debugging purposes only." Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="LOG_LEVEL" Target="LOG_LEVEL" Default="info" Mode="" Description="OPTIONAL: Container Variable: LOG_LEVEL" Type="Variable" Display="always" Required="false" Mask="false">info</Config>
   <Config Name="HEALTH_SERVER_ADDRESS" Target="HEALTH_SERVER_ADDRESS" Default="127.0.0.1:9999" Mode="" Description="OPTIONAL: Internal Health Server Listening Addroess" Type="Variable" Display="advanced" Required="false" Mask="false">127.0.0.1:9999</Config>
   <Config Name="HEALTH_TARGET_ADDRESS" Target="HEALTH_TARGET_ADDRESS" Default="github.com:443" Mode="" Description="OPTIONAL: Address used to check tunnel health" Type="Variable" Display="advanced" Required="false" Mask="false">github.com:443</Config>
   <Config Name="HEALTH_VPN_DURATION_INITIAL" Target="HEALTH_VPN_DURATION_INITIAL" Default="6s" Mode="" Description="OPTIONAL: Initial health check duration in seconds." Type="Variable" Display="advanced" Required="false" Mask="false">6s</Config>
   <Config Name="HEALTH_VPN_DURATION_ADDITION" Target="HEALTH_VPN_DURATION_ADDITION" Default="5s" Mode="" Description="OPTIONAL: Subsequent health check duration in seconds." Type="Variable" Display="advanced" Required="false" Mask="false">5s</Config>
   <Config Name="DOT" Target="DOT" Default="on|off" Mode="" Description="(Recommended: on) Activate DNS over TLS with Unbound" Type="Variable" Display="always" Required="false" Mask="false">on</Config>
   <Config Name="DOT_PROVIDERS" Target="DOT_PROVIDERS" Default="cloudflare|google|quad9|quadrant|cleanbrowsing" Mode="" Description="Comma delimited list of DNS over TLS providers" Type="Variable" Display="always" Required="false" Mask="false">cloudflare</Config>
   <Config Name="DOT_PRIVATE_ADDRESS" Target="DOT_PRIVATE_ADDRESS" Default="127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16,::1/128,fc00::/7,fe80::/10,::ffff:7f00:1/104,::ffff:a00:0/104,::ffff:a9fe:0/112,::ffff:ac10:0/108,::ffff:c0a8:0/112" Mode="" Description="All private CIDRs ranges. Comma separated list of CIDRs or single IP addresses Unbound won't resolve to. Note that the default setting prevents DNS rebinding" Type="Variable" Display="always" Required="false" Mask="false">127.0.0.1/8,10.0.0.0/8,172.16.0.0/12,192.168.0.0/16,169.254.0.0/16,::1/128,fc00::/7,fe80::/10,::ffff:7f00:1/104,::ffff:a00:0/104,::ffff:a9fe:0/112,::ffff:ac10:0/108,::ffff:c0a8:0/112</Config>
   <Config Name="DOT_VERBOSITY" Target="DOT_VERBOSITY" Default="0|1|2|3|4|5" Mode="" Description="OPTIONAL: Unbound verbosity level" Type="Variable" Display="always" Required="false" Mask="false">1</Config>
   <Config Name="DOT_VERBOSITY_DETAILS" Target="DOT_VERBOSITY_DETAILS" Default="0|1|2|3|4" Mode="" Description="OPTIONAL: Unbound details verbosity level" Type="Variable" Display="always" Required="false" Mask="false">0</Config>
   <Config Name="DOT_VALIDATION_LOGLEVEL" Target="DOT_VALIDATION_LOGLEVEL" Default="0|1|2" Mode="" Description="OPTIONAL: Unbound validation log level" Type="Variable" Display="always" Required="false" Mask="false">0</Config>
   <Config Name="DOT_CACHING" Target="DOT_CACHING" Default="on|off" Mode="" Description="OPTIONAL: Unbound caching" Type="Variable" Display="always" Required="false" Mask="false">on</Config>
   <Config Name="DOT_IPV6" Target="DOT_IPV6" Default="on|off" Mode="" Description="OPTIONAL: DNS IPv6 resolution" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="BLOCK_MALICIOUS" Target="BLOCK_MALICIOUS" Default="on|off" Mode="" Description="OPTIONAL: Block malicious hostnames and IPs with Unbound" Type="Variable" Display="always" Required="false" Mask="false">on</Config>
   <Config Name="BLOCK_SURVEILLANCE" Target="BLOCK_SURVEILLANCE" Default="on|off" Mode="" Description="OPTIONAL: Block surveillance hostnames and IPs with Unbound" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="BLOCK_ADS" Target="BLOCK_ADS" Default="on|off" Mode="" Description="OPTIONAL: Block ads hostnames and IPs with Unbound" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="UNBLOCK" Target="UNBLOCK" Default="" Mode="" Description="OPTIONAL: Comma separated list of domain names to leave unblocked with Unbound. i.e. domain1.com,x.domain2.co.uk" Type="Variable" Display="always" Required="false" Mask="false"></Config>
   <Config Name="DNS_UPDATE_PERIOD" Target="DNS_UPDATE_PERIOD" Default="24h" Mode="" Description="OPTIONAL: Period to update block lists and cryptographic files and restart Unbound. Set to 0 to deactivate updates. i.e. 0, 30s, 5m, 24h" Type="Variable" Display="always" Required="false" Mask="false">24h</Config>
   <Config Name="DNS_ADDRESS" Target="DNS_ADDRESS" Default="" Mode="" Description="OPTIONAL: IP address to use as DNS resolver if DOT is off" Type="Variable" Display="always" Required="false" Mask="false"></Config>
   <Config Name="DNS_KEEP_NAMESERVER" Target="DNS_KEEP_NAMESERVER" Default="on|off" Mode="" Description="OPTIONAL: Keep the nameservers in /etc/resolv.conf untouched, but disabled DNS blocking features" Type="Variable" Display="always" Required="false" Mask="false">on</Config>
   <Config Name="HTTPPROXY" Target="HTTPPROXY" Default="off|on" Mode="" Description="OPTIONAL: Enable the internal HTTP proxy" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="HTTPPROXY_LOG" Target="HTTPPROXY_LOG" Default="off|on" Mode="" Description="OPTIONAL: Logs every tunnel requests" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="HTTPPROXY_PORT" Target="8888" Default="8888" Mode="tcp" Description="Internal port number for the HTTP proxy to listen on" Type="Port" Display="always" Required="true" Mask="false">8888</Config>
   <Config Name="HTTPPROXY_USER" Target="HTTPPROXY_USER" Default="" Mode="" Description="OPTIONAL: Username to use to connect to the HTTP proxy" Type="Variable" Display="always" Required="false" Mask="false" />
   <Config Name="HTTPPROXY_PASSWORD" Target="HTTPPROXY_PASSWORD" Default="" Mode="" Description="OPTIONAL: Password to use to connect to the HTTP proxy" Type="Variable" Display="always" Required="false" Mask="true" />
   <Config Name="ENABLE_HTTPPROXY_STEALTH" Target="HTTPPROXY_STEALTH" Default="off|on" Mode="" Description="OPTIONAL: Stealth mode means HTTP proxy headers are not added to your requests" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="SHADOWSOCKS" Target="SHADOWSOCKS" Default="off|on" Mode="" Description="OPTIONAL: Enable the internal Shadowsocks proxy" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="SHADOWSOCKS_LOG" Target="SHADOWSOCKS_LOG" Default="off|on" Mode="" Description="OPTIONAL: Enable Shadowsocks logging" Type="Variable" Display="always" Required="false" Mask="false">off</Config>
   <Config Name="SHADOWSOCKS_LISTENING_ADDRESS" Target=":8388" Default=":8388" Mode="" Description="OPTIONAL: Port number for the HTTP proxy to listen on" Type="Variable" Display="always" Required="true" Mask="false">:8388</Config>
   <Config Name="SHADOWSOCKS_PASSWORD" Target="SHADOWSOCKS_PASSWORD" Default="" Mode="" Description="OPTIONAL: Password to use to connect to Shadowsocks" Type="Variable" Display="always" Required="false" Mask="true" />
   <Config Name="SHADOWSOCKS_CIPHER" Target="SHADOWSOCKS_CIPHER" Default="chacha20-ietf-poly1305|aes-128-gcm|aes-256-gcm" Mode="" Description="OPTIONAL: Cipher to use for Shadowsocks" Type="Variable" Display="always" Required="false" Mask="false">chacha20-ietf-poly1305</Config>
   <Config Name="UPDATER_PERIOD" Target="UPDATER_PERIOD" Default="0" Mode="" Description="OPTIONAL: Period to update all VPN servers information in memory and to /gluetun/servers.json. Set to 0 to disable. This does a burst of DNS over TLS requests, which may be blocked if you set BLOCK_MALICIOUS=on for example. Valid duration string such as 24h." Type="Variable" Display="advanced" Required="false" Mask="false">0</Config>
   <Config Name="PUBLICIP_FILE" Target="PUBLICIP_FILE" Default="/gluetun/ip" Mode="" Description="OPTIONAL: Filepath to store the public IP address assigned" Type="Variable" Display="advanced" Required="false" Mask="false">/gluetun/ip</Config>
   <Config Name="PUBLICIP_PERIOD" Target="PUBLICIP_PERIOD" Default="12h" Mode="" Description="OPTIONAL: Period to check for public IP address. Set to 0 to disable." Type="Variable" Display="advanced" Required="false" Mask="false">12h</Config>
   <Config Name="VERSION_INFORMATION" Target="VERSION_INFORMATION" Default="on|off" Mode="" Description="OPTIONAL: Filepath to store the public IP address assigned" Type="Variable" Display="advanced" Required="false" Mask="false">on</Config>
   <Config Name="HTTP_CONTROL_SERVER_PORT" Target="8000" Default="8000" Mode="tcp" Description="Container Port: 8000" Type="Port" Display="advanced" Required="true" Mask="false">8000</Config>
   <Config Name="HTTP_CONTROL_SERVER_LOG" Target="HTTP_CONTROL_SERVER_LOG" Default="on|off" Mode="" Description="OPTIONAL: Enable logging of HTTP requests" Type="Variable" Display="advanced" Required="false" Mask="false">on</Config>
   <Config Name="PUID" Target="PUID" Default="" Mode="" Description="Container Variable: PUID" Type="Variable" Display="advanced" Required="false" Mask="false">1000</Config>
   <Config Name="PGID" Target="PGID" Default="" Mode="" Description="Container Variable: PGID" Type="Variable" Display="advanced" Required="false" Mask="false">1000</Config>
</Container>
